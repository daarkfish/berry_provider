// Mocks generated by Mockito 5.4.4 from annotations
// in berry_provider/test/provider_berry_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:berry_provider/models/berry.dart' as _i2;
import 'package:berry_provider/services/api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBerry_0 extends _i1.SmartFake implements _i2.Berry {
  _FakeBerry_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Berry>> getBerries() => (super.noSuchMethod(
        Invocation.method(
          #getBerries,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Berry>>.value(<_i2.Berry>[]),
      ) as _i4.Future<List<_i2.Berry>>);

  @override
  _i4.Future<_i2.Berry> getBerryDetails(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getBerryDetails,
          [name],
        ),
        returnValue: _i4.Future<_i2.Berry>.value(_FakeBerry_0(
          this,
          Invocation.method(
            #getBerryDetails,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.Berry>);

  @override
  _i4.Future<List<_i2.Berry>> searchBerries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchBerries,
          [query],
        ),
        returnValue: _i4.Future<List<_i2.Berry>>.value(<_i2.Berry>[]),
      ) as _i4.Future<List<_i2.Berry>>);
}
